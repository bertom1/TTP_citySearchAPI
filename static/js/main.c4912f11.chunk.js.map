{"version":3,"sources":["components/CityCard.jsx","components/City.jsx","App.js","reportWebVitals.js","index.js"],"names":["CityCard","props","className","zip","City","updateCity","event","setState","city","target","value","search","preventDefault","cityInput","state","cityArr","split","join","toUpperCase","fetch","then","response","json","data","catch","error","window","alert","type","onChange","this","onClick","map","zipCode","index","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAUeA,EARE,SAACC,GACd,OACI,qBAAKC,UAAY,OAAjB,SACKD,EAAME,OCqDJC,E,kDAtDX,WAAaH,GAAQ,IAAD,8BAChB,cAAMA,IAOVI,WAAa,SAACC,GACV,EAAKC,SAAS,CAACC,KAAMF,EAAMG,OAAOC,SATlB,EAYpBC,OAAS,SAACL,GACNA,EAAMM,iBACN,IAAIC,EAAY,EAAKC,MAAMN,KACvBO,EAAUF,EAAUG,MAAM,KAC9BH,EAAaE,EAAQE,KAAK,IAAIC,cAE9BC,MADgB,0CAA4CN,GAE5DO,MAAK,SAACC,GACH,OAAOA,EAASC,UAEnBF,MAAK,SAACC,GACL,EAAKd,SAAS,CAACgB,KAAMF,OAEtBG,OAAM,SAACC,GACJC,OAAOC,MAAM,kBACb,EAAKpB,SAAS,CAACgB,KAAM,SAzBxB,EAAKT,MAAQ,CACTN,KAAM,GACNe,KAAM,IAJM,E,qDAiChB,OACI,gCACI,sBAAKrB,UAAY,YAAjB,UACQ,2DAEI,uBAAO0B,KAAO,OAAOC,SAAYC,KAAKzB,gBAE1C,wBAAQuB,KAAO,SAASG,QAAWD,KAAKnB,OAAxC,uBAER,qBAAKT,UAAY,gBAAjB,SAEQ4B,KAAKhB,MAAMS,KAAKS,KAAI,SAACC,EAASC,GAC1B,OAAQ,cAAC,EAAD,CAAU/B,IAAO8B,GAAgBC,e,GA9ClDC,IAAMC,WCQVC,MARf,WACE,OACE,qBAAKnC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c4912f11.chunk.js","sourcesContent":["import React from 'react'\n\nconst CityCard = (props) => {\n    return (\n        <div className = 'card'>\n            {props.zip}\n        </div>\n    )\n}\n\nexport default CityCard","import React from 'react'\nimport CityCard from './CityCard'\n\nclass City extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            city: '',\n            data: []\n        }\n    }\n    //updates state as the user types\n    updateCity = (event) => {\n        this.setState({city: event.target.value})\n    }\n    //does api request when search button is clicked\n    search = (event) => {\n        event.preventDefault()\n        let cityInput = this.state.city\n        let cityArr = cityInput.split(\" \")\n        cityInput =  cityArr.join(\"\").toUpperCase()\n        const apiLink = 'https://ctp-zip-api.herokuapp.com/city/' + cityInput\n        fetch(apiLink)\n       .then((response) => {\n           return response.json()\n        })\n       .then((response) => {\n         this.setState({data: response}) \n       })\n       .catch((error) => {\n           window.alert('city not found')\n           this.setState({data: []})\n        });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className = 'SearchBar'>\n                        <label>\n                            Enter a city to search\n                            <input type = 'text' onChange = {this.updateCity}></input>\n                        </label>\n                        <button type = 'button' onClick = {this.search}>Search</button>\n                </div>\n                <div className = 'SearchResults'>\n                    {\n                        this.state.data.map((zipCode, index) => {\n                            return (<CityCard zip = {zipCode} key = {index} />)\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default City","import './App.css';\nimport City from './components/City'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <City />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}